------------ 2_start
Установка и настройка рабочей среды
• установка Node.js с сайта программы

Дебаг программы

Менеджер пакетов

Работа с консолью, циклы событий, асинхронность

Модули Node.js и инструменты разработки

Стримы (потоки)

Node.js HTTP-module. HTTP-stream. Встроенный низкоуровневый веб-сервер

------------ npm
• как запустить nodemon?
• 
• 
• 

3 ------------ process, os
•  следует знать (Флэнаган):
process.argv
process.arch
process.cwd()
process.chdir()
process.cpuUsage()
process.env
process.execPath
process.exit()
process.exitCode
process.getuid()
process.hrtime.bigint()
process.kill()
process.memoryUsage()
process.nextTick()
process.pid
process.ppid
process.platform
process.resourceUsage()
process.setuid()
process.title
process.umask()
process.uptime()
process.version
process.versions

•  следует знать (Флэнаган):
os.arch()
os.constants
os.cpus()
os.endiannes()
os.EOL
os.freemem
os.getPriority()
os.homedir()
os.hostname()
os.loadavg()
os.networkInterface()
os.platform()
os.release()
os.setPriority()
os.tmpdir
os.totalmem()
os.type()
os.uptime()
os.userInfo()

4 ------------ Buffer
• создать безопасный буфер длинной 1024 байт, заполненный единицами
• создать небезопасный буфер длинной 1024 байт (без очистки)
• создать буфер из массива
• создать буфер из строки и вывести в кодировке ut8, base64, binary, hex
• созданные буферы конкатинируйте
• в буфере из строки найти символ на 2-й позиции
• проитерир-сь по буферу и выведите в консоль каждый символ

5 ------------ events
• создать событие "message" и вывести сообщение в консоль (генерация события)
• написать пример однократного события
• пример передачи аргументов слушателям
• переключить ф-ию слуш-ля в асинх. режим
• пример испол-я асинх. колбэка с правильной обработкой ошибок (captureRejections: true)

6 ------------ path
Вывести в консоль:
• Название текущ. файла
• абсолютный путь к текущ. файлу
• Название текущ. файла без расширения
• Расширение файла
• Название текущ. папки
• Абсолютный путь к текущ. папке
• Абсолютный путь к НЕтекущ. папке
• Путь к файлу в соседней папке (абсолютный)
• Путь к файлу в соседней папке (относительный)

7 ------------ fs
• создать папку синхронно
• создать вложенные папки синхронно рекурсивно
• создать папку асинхронно
• создать вложенные папки асинхронно рекурсивно
• удалить папку через колбэки
• удалить папку через промисы
• записать/добавить/прочитать строку в файл синхронно
• записать/добавить/прочитать строку в файл асинхронно через колбэки
• записать/добавить/прочитать строку в файл асинхронно через промисы (своя ф-ия)
• записать/добавить/прочитать строку в файл асинхронно через промисы в кодировке utf-8
• удалить файл через колбэки
• удалить файл через промисы
• Через перемен.окруж-я передаем строку (ytcrjkmrj ckjd), записываем её в файл.
Считываем файл, считаем кол-во слов в файле и записываем их в другой файл. Первый файл удаляем

8 ------------ streams
• прочитать любой файл и вывести его текст в кодировке utf-8 по кусочкам в консоль
    + вывести надпись "начали" в момента начала чтения и "конец" - в конце чтения
    + обработка ошибок
• записать в файл 20 кусков данных
• использовать канал и поток Transform. Прочитать и записать файл в архивированном виде
• 

9 ------------ http
• создать сервер
• вывести сообщение в браузер в формате JSON
• Вывести html-файл из папки public в ответ на опред-й урл

------------ Свои проекты
• чат
•

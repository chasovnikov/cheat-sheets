
-------------- Настройка Git ------------------
git --version       - Смотреть версию гита

    Посмотреть все установленные настройки и их расположение:
git config --list --show-origin

    Задать глобально имя и электрон.почту:
git config --global user.name "John Doe"
git config --global user.email johndoe@example.com

git config --list       - Проверка настроек

-------------- HELP --------------
git help <команда>
git <команда> --help
man git-<команда>

git <команда> -h    - Посмотреть только список опций

-------------- Создание Git-репозитория -------------

    Создаёт в текущем каталоге подкаталог с именем .git
git init

    Подкаталог .git:
config
description
HEAD        - указывает на текущую ветку
hooks/      - запуск пользовательских скриптов по событиям
info/       - глобальные настройки игнорирования файлов (которые вы не хотите помещать в .gitignore)
objects/    - база данных объектов Git
refs/       - ссылки на объекты коммитов в этой базе
index       - хранится содержимое индекса

-------------- Клонирование существующего репозитория

    Клонировать в текущий каталог
git clone https://github.com/libgit3/libgit4

    Клонир. в каталог mylibgit
git clone https://github.com/libgit3/libgit4 mylibgit

--------------- Запись изменений в репозиторий -----------------

    Определение состояния файлов:
git status
git status -s         - Сокращенный вывод статуса
git status --short -  - то же самое

    Отслеживание новых файлов:
git add README        - добавить под версионный контроль файл README
                        или индексация изменений, 
                        или для указания файлов с исправленным конфликтом слияния
git add *             - добавить всё в текущем каталоге

    Игнорирование файлов через консоль (запись в файл .gitignore):
cat .gitignore
*.[oa]
*~

git log     - История комитов

---------------

    Удалить файл из индекса, оставив его в рабочем каталоге:
git rm --cached <file>

---------------
---------------



git update-index --assume-unchanged <file>    
                            - временно игнорировать файл <file>
git update-index --no-assume-unchanged <file> 
                            - отключить игнорирование файла <file>

git config --global core.excludesfile ~/.gitexcludes    - исключение для компьютера


git diff              - смотреть непроиндексированные изменения
git diff --staged     - что проиндексировали и что войдёт в следующий коммит
git diff --cached     -  --staged и --cached синонимы


git add   - добавить в отслеживание новый файл,
            индексация изменений,
            указание файлов с исправленным конфликтом слияния.

git commit -v     - перед коммитом выводит в консоль подробное напоминание об изменениях
git commit                      - зафиксировать изменения.
git commit -m "comment here"    - набрать свой комментарий к коммиту
git commit -a                   - add + commit.

git rm               - удалить файл из индекса и каталога.
git rm --cached      - удалить файл из индекса, но не в каталоге.
git rm -f            - принудительное удаление.
git rm log/\*.log    - В команду git rm можно передавать файлы, каталоги или шаблоны.
git rm \*~           - удалить все файлы, имена которых заканчиваются на ~.

git mv README.md README    - переименовать файл из README.md в README.
    ТОЖЕ САМОЕ: (
mv README.md README
git rm README.md
git add README  )

git pull --all           - извлечь все изменения из удаленного репо
git branch new_branch    - создает новую ветку, но не переключает на неё
git checkout new_branch  - переключение на ветку new_branch
git merge new_branch     - смерджить ветку new_branch с текущей
git branch -d new_branch - удлать ветку new_branch
git push origin main     - запушить изменения на удален. репо

git fetch

git log                     - перечисляет коммиты
git log -p -2               - разницу, внесенную в каждый коммит (2 записи)
git log --stat              - сокращенная статистика
git log --pretty=oneline    - формат вывода:
    oneline                 - каждый коммит в одну строку
    short, full и fuller    - делают вывод приблизительно в том же формате
    format:"%h - %an, %ar : %s"
        %h  - Сокращенный хеш коммита
        %an - Имя автора
        %ar - Относительная дата автора
        %s  - Содержание
            - и др.        
    и др.
git log --pretty=oneline --graph    - добавится небольшой граф в формате ASCII
git log --since=2.weeks             - за последние две недели
        --author                    - фильтровать по автору коммита
        --grep                      - искать по ключевым словам
git log -S function_name            - те коммиты, в которых добавляется или удаляется эта строка
git log -- path/to/file             - те коммиты, в которых были изменения этих файлов
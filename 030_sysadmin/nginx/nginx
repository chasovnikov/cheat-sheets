
# основные конфиг. файлы
/usr/local/nginx/conf/nginx.conf	
/usr/local/etc/nginx/nginx.conf
/etc/nginx/nginx.conf
/etc/nginx/nginx.conf/sites-available/default  # виртуальный хост по умолч.
/etc/nginx/nginx.conf/conf.d  # дирек. для виртуальн. хостов (CentOS 7 ?)

# ---------- Команды nginx (не все)

# проверка конфигурации
sudo nginx -t
# если команда nginx не найдена, то добавить путь к бинарнику "nginx" 
# в переменную среды. Например 
export PATH=$PATH:/usr/sbin/

# запуск (выполнить исполняемый файл)
sudo nginx

# Для просмотра списка всех запущенных процессов nginx
ps -ax | grep nginx

# если nginx и apache используют один порт (по умолч.), то проверить, что апач не запущен
sudo systemctl status apache2 

sudo nginx -s stop   # быстрое жёсткое завершение
sudo nginx -s quit   # перестает принимать соединения, но старые обслуживает

# применить новую конфигурацию nginx без остановки. Будет запущен новый рабочий процесс с новой конфигурацией, а старые процессы плавно завершатся
sudo nginx -s reload

# перезапуск nginx
systemctl restart nginx

# выводит полный конфиг на экран. Вывод можно направить в отдельный файл и там проанализировать
sudo nginx -T

# посмотреть полную информацию о версии nginx, параметрах сборки, модулях и т.д.
sudo nginx -V

# Все настройки конф-ии производятся в nginx.conf

# ---------- Создание виртуального хоста для mysite.local
# По умолч. уже есть один виртуальный хост с конфигом /etc/nginx/sites-available/default

# Создать/редак-ть отдельн. конфиг. файл для mysite.local
# CentOS 7:     
sudo nano /etc/nginx/conf.d/mysite.local
# Ubuntu 16.04: 
sudo nano /etc/nginx/sites-available/mysite.local

# /etc/nginx/nginx.conf/sites-available/mysite.local
server {
	listen 127.0.01:80;
	server_name mysite.local www.mysite.local mysite.com;
	error_log /var/log/nginx/mysite.local.error.log;
	access_log /var/log/nginx/mysite.local.access.log;
	error_page 500 502 503 504 /50x.html;

	location / {
		root /home/ch/develop/sites/mysite.local;
		index  index.html index.htm index.php;
	}
}

# рекоменд. для каждого домена делать отдельно:
    "директорию с исходниками сайта;
    директорию с логами;
    в некоторых ситуациях отдельный php-fpm пул для каждого сайта или группы сайтов"

# ---------- Работа nginx с php-fpm

# Php-fpm может слушать как сокет unix, так и tcp порт. 
# Эти настройки задаются в конфиге пула. Это может быть либо
listen = 127.0.0.1:9000
# либо
listen = /var/run/php-fpm/php-fpm.sock
# В зависимости от того, в каком режиме работает php-fpm, зависят настройки в nginx

# Примерный конфиг php-fpm для пула www.conf на виртуальной машине с 1Gb памяти
[www]
listen = /var/run/php-fpm/php-fpm.sock
listen.allowed_clients = 127.0.0.1
listen.mode = 0660
listen.owner = nginx
listen.group = nginx
user = nginx
group = nginx
; как будут создаваться новые рабочие процессы
pm = dynamic
; максимальное количество рабочих процессов
pm.max_children = 15
; число запущенных процессов при старте сервера
pm.start_servers = 6
; минимальное и максимальное количество процессов в простое
pm.min_spare_servers = 4
pm.max_spare_servers = 8
slowlog = /var/log/php-fpm/www-slow.log
pm.max_requests = 250
php_admin_value[error_log] = /var/log/php-fpm/www-error.log
php_admin_flag[log_errors] = on
php_value[session.save_handler] = files
php_value[session.save_path] = /var/lib/php/session
pm.status_path = /status

# Пример: указать в виртуальном хосте location для php для wordpress сайта
location ~ \.php$ {
 try_files  $uri =404;
 fastcgi_pass   unix:/var/run/php-fpm/php-fpm.sock;
 #fastcgi_pass    127.0.0.1:9000;
 fastcgi_index index.php;
 include fastcgi_params;
 fastcgi_param DOCUMENT_ROOT /web/sites/example.com/www/;
 fastcgi_param SCRIPT_FILENAME /web/sites/example.com/www$fastcgi_script_name;
 fastcgi_param PATH_TRANSLATED /web/sites/example.com/www$fastcgi_script_name;
 fastcgi_param QUERY_STRING $query_string;
 fastcgi_param REQUEST_METHOD $request_method;
 fastcgi_param CONTENT_TYPE $content_type;
 fastcgi_param CONTENT_LENGTH $content_length;
 fastcgi_param HTTPS on; # включать, если сайт по https работает
 fastcgi_intercept_errors on;
 fastcgi_ignore_client_abort off;
 fastcgi_connect_timeout 60;
 fastcgi_send_timeout 180;
 fastcgi_read_timeout 180;
 fastcgi_buffer_size 128k;
 fastcgi_buffers 4 256k;
 fastcgi_busy_buffers_size 256k;
 fastcgi_temp_file_write_size 256k;
}

"Типовой ошибкой в данном случае является то, что nginx не имеет доступа к unix сокету php-fpm. 
По-умолчанию после установки он запускается с правами apache. 
Если пользователя не исправить на nginx, то у веб сервера не будет доступа к сокету, 
php не заработает. В своем примере конфига php-fpm я указал пользователя правильно"

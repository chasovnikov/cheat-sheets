# ---------- Команды nginx (не все)

# проверка конфигурации
nginx -t

# перезапуск nginx
systemctl restart nginx

# применить новую конфигурацию nginx без остановки. Будет запущен новый рабочий процесс с новой конфигурацией, а старые процессы плавно завершатся
nginx -s reload

# выводит полный конфиг на экран. Вывод можно направить в отдельный файл и там проанализировать
nginx -T

# посмотреть полную информацию о версии nginx, параметрах сборки, модулях и т.д.
nginx -V

# ---------- Виртуальные хосты
# По умолч. уже есть один виртуальный хост с конфигом default.conf
# Обычно конфиги с виртуальными хостами расположены в директории /etc/nginx/conf.d

# типичный пример конфига.
server {
	listen 80;
	server_name example.com www.example.com;
	access_log /var/log/nginx/example.com.access.log main;
	root   /var/www/example.com/public;

	location / {
		index  index.html index.htm index.php;
	}
	location ~ \.php$ {
		fastcgi_pass   127.0.0.1:9000;
		fastcgi_index  index.php;
		fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
		include        fastcgi_params;
	}
}

# рекомендую для каждого домена делать отдельно:
    "директорию с исходниками сайта;
    директорию с логами;
    в некоторых ситуациях отдельный php-fpm пул для каждого сайта или группы сайтов"

# ---------- Настройка location в конфигурации
# https://nginx.org/ru/docs/http/ngx_http_core_module.html#location
# location позволяет управлять конфигурацией в зависимости от URI запроса
# Location можно задавать префиксной строкой или регулярным выражением
# В регулярных вырвжениях '~' - учитывать регистр, '~*' - не учитывать регистр
# Обработка location идет в последовательности: первыми проверяются префиксные строки. Совпадения запоминаются. Дальше проверяются регулярные выражения
# префикс = означает точное совпадение запроса и заданного location. После совпадения, остальные проверки прекращаются. Снижает нагрузку на сервер, так как запросы не будут проверяться по всем правилам

# Пример: перенаправление с amp страниц на обычные
location ~ /amp/$ {
    rewrite ^(.*/)amp/$ $1 permanent;
}

# Пример: максимальный срок хранения картинок и шрифтов в кэше и откл-е для них логирование
location ~* ^.+.(js|css|png|jpg|jpeg|gif|ico|woff|woff2|swf|ttf|svg)$ {
    access_log off;
    expires 1y;
}

# Пример: закроем доступ к директории .git на сайте
location ~ /.git {
    return 404;
}

# Запретим исполнение скриптов в перечисленных директориях
location ~* /(images|cache|media|logs|tmp)/.*.(php|pl|py|jsp|asp|sh|cgi)$ {
    return 404;
}

# ---------- Работа nginx с php-fpm
# Php-fpm может слушать как сокет unix, так и tcp порт. 
# Эти настройки задаются в конфиге пула. Это может быть либо
listen = 127.0.0.1:9000
# либо
listen = /var/run/php-fpm/php-fpm.sock
# В зависимости от того, в каком режиме работает php-fpm, зависят настройки в nginx

# Примерный конфиг php-fpm для пула www.conf на виртуальной машине с 1Gb памяти
[www]
listen = /var/run/php-fpm/php-fpm.sock
listen.allowed_clients = 127.0.0.1
listen.mode = 0660
listen.owner = nginx
listen.group = nginx
user = nginx
group = nginx
; как будут создаваться новые рабочие процессы
pm = dynamic
; максимальное количество рабочих процессов
pm.max_children = 15
; число запущенных процессов при старте сервера
pm.start_servers = 6
; минимальное и максимальное количество процессов в простое
pm.min_spare_servers = 4
pm.max_spare_servers = 8
slowlog = /var/log/php-fpm/www-slow.log
pm.max_requests = 250
php_admin_value[error_log] = /var/log/php-fpm/www-error.log
php_admin_flag[log_errors] = on
php_value[session.save_handler] = files
php_value[session.save_path] = /var/lib/php/session
pm.status_path = /status

# Пример: указать в виртуальном хосте location для php для wordpress сайта
location ~ \.php$ {
 try_files  $uri =404;
 fastcgi_pass   unix:/var/run/php-fpm/php-fpm.sock;
 #fastcgi_pass    127.0.0.1:9000;
 fastcgi_index index.php;
 include fastcgi_params;
 fastcgi_param DOCUMENT_ROOT /web/sites/example.com/www/;
 fastcgi_param SCRIPT_FILENAME /web/sites/example.com/www$fastcgi_script_name;
 fastcgi_param PATH_TRANSLATED /web/sites/example.com/www$fastcgi_script_name;
 fastcgi_param QUERY_STRING $query_string;
 fastcgi_param REQUEST_METHOD $request_method;
 fastcgi_param CONTENT_TYPE $content_type;
 fastcgi_param CONTENT_LENGTH $content_length;
 fastcgi_param HTTPS on; # включать, если сайт по https работает
 fastcgi_intercept_errors on;
 fastcgi_ignore_client_abort off;
 fastcgi_connect_timeout 60;
 fastcgi_send_timeout 180;
 fastcgi_read_timeout 180;
 fastcgi_buffer_size 128k;
 fastcgi_buffers 4 256k;
 fastcgi_busy_buffers_size 256k;
 fastcgi_temp_file_write_size 256k;
}

"Типовой ошибкой в данном случае является то, что nginx не имеет доступа к unix сокету php-fpm. 
По-умолчанию после установки он запускается с правами apache. 
Если пользователя не исправить на nginx, то у веб сервера не будет доступа к сокету, 
php не заработает. В своем примере конфига php-fpm я указал пользователя правильно"

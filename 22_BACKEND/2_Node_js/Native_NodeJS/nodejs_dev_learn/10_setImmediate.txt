Если вы хотите выполнить какой-либо фрагмент кода асинхронно, но как можно скорее, 
одним из вариантов является использование функции setImmediate():

setImmediate(() => {
  //run something
})

Любая функция, переданная в качестве аргумента setImmediate(), является обратным вызовом, 
который выполняется на следующей итерации цикла событий.

Чем setImmediate() отличается от setTimeout(() => {}, 0) ( прохождение тайм-аута 0 мс) 
и от process.nextTick()?

Функция, переданная process.nextTick(), будет выполнена на текущей итерации цикла событий 
после завершения текущей операции. Это означает, что он всегда будет выполняться до setTimeout 
и setImmediate.

Обратный вызов setTimeout() с задержкой 0 мс очень похож на setImmediate(). Порядок выполнения 
будет зависеть от различных факторов, но оба они будут выполняться на следующей итерации 
цикла событий.
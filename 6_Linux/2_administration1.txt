https://www.youtube.com/watch?v=cbo0HVW2ydw&list=RDCMUCmqEpAsQMcsYaeef4qgECvQ&index=3

Резервные копии надо регулярно проверять.

По умолч. для суперпол-ля резервир-ся место 10% (на случай, если место закончится, 
что бы суперпол. мог что-нибудь сделать).
В случае необходимости у него можно отобрать часть этого места.

inode - индексный дексриптор. Спец. сущность, в которой хранятся мета-инф. о файле:
• права
• ссылки на области данных
• размер
• владелец
• даты модификации:
  C_time  - изменения мета-инф-ии
  M_time  - изменения содержимого файла
  A_time  - доступа
• и др.

ls -i <файл>    - смотр. номер inode
stat <файл>     - инф. о файле: inode и др.
df -id          - инф. о всех inode

------------------------- Ссылки в Linux

Ссылки бывают:
1. Символические - имя файла ссылается на другое имя файла (похожи на обычные ярлыки).
Фактически является небольшим файлом, содержащим путь до целевого файла.
  • Могут ссылаться на файлы, каталоги, диски;
  • После удаления, перемещения или переименования файла становятся недействительными;
  • Права доступа и номер inode
    отличаются от исходного файла;
  • При изменении прав доступа для исходного файла, права на ссылку останутся неизменными;
2. Жёсткими - еще одно имя файла, кот. ссыл-ся на тот же inode.
Дополнительный указатель на существующий файл, но не копия файла.
  • Работают только в пределах одной файловой системы;
  • Нельзя ссылаться на каталоги;
  • Имеют тот же inode и набор разрешений что и у исходного файла;
  • Разрешения на ссылку изменяться при изменении разрешений файла;
  • Можно перемещать и переименовывать и даже удалять файл без вреда ссылке.

Создать сим. ссылку:
  ln -s <целевой_файл> <имя_ссылки>
  ln -s /home/pingvinus/myfile.txt mylink
  ls -li    - проверить создание (стрелка и разные inode)

Создать жёстк. ссылку:
  ln <целевой_файл> <имя_ссылки>
  ln /home/pingvinus/myfile.txt mylink
  ls -li    - проверить создание (одинаковый inode)

------------------------- AAA

AAA - Authentication, Authorization, Accounting

• Authentication (аутентификация) — проверка подлиности. Сопоставление пары "логин:пароль".
• Authorization (авторизация)     — предоставление прав доступа.
• Accounting (учёт)               — сохранение информации о действиях пользователя.

------------------------- SSH 

SSH (Secure Shell) — сетевой протокол прикладного уровня, 
  позволяющий производить удалённое управление операционной системой и туннелирование TCP-соединений. 
  Шифрует весь трафик, включая и передаваемые пароли.
  Позволяет безопасно передавать в незащищённой среде практически любой другой сетевой протокол.
  Может использовать сжатие передаваемых данных.
  Обычно прослушивает соединения на TCP-порту 22.
  Аутентификация по ip-адресу небезопасна. Можно использ. аутентификац. по паролю или по ключевой паре
  При каждом подключении подобно https вырабатывается общий секретный ключ для шифрования трафика.

PuTTY - клиент SSH под Windows
------------------------- ВХОД В СИСТЕМУ (удаленно)

1. Осмотреться:
  • кто я: id польз-ля, членство в группах, ...

whoami    - показ. моё имя
groups    - перечисли группы
id        - вывод информации об учетной записи пользователя

  • где я: имя системы, раб.каталог, список файлов в кат.

hostname    - имя текущ. сервера
pwd         - показ. текщу. дир.
ls -la      - список всех файлов в текущ. дир.

  • что вокруг: версия ядра, свободное место на дисках, инф. о памяти, кто в системе, ...

uname -a    - (Unix name) показ. инф. о ОС, процессорах, hostname (-a - всю инф.)
df -h       - (disk free) инф. об использ. смонтир. файлов. систем (-h - читабельн. вид)
free        - подробн. инф. об использовании памяти и swap
w           - кто в системе, и что делает
who         - кто вошёл в систему

------------------------- ФАЙЛОВАЯ СИСТЕМА LINUX

/etc            - локальные настройки
/home           - каталоги
/bin (*/bin)    - базовые утилиты (для поднятия/загрузки системы)
/sbin (*/sbin)  - сервисные утилиты (ипольз-ся системой или суперпользователем)
/user           - общая часть программы
/var            - изменяемые файлы (логи, очереди, базы, кеши)

------------------------- ПРАВА ДОСТУПА 

UGO права:
Смотрим ls -l:
-rw-rw-r-- 1 mdv ...

<-/d/s><Права польз-ля><Права группы><Права остальных>

В начале:
-: файл
d: директория
s: сокет

rwx (Read/Write/eXecute)

------------------------- Пуск программ
По умол., если набрать просто имя программы, то она ищется в каталогах
указанных в перменной окружения $PATH.
Если требуется запустить с текущ. кат., то следует добавить "./"
"." - ссылка на текущ. каталог
Каждая программа работает с 3-мя потоками данных: STDIN, STDOUT, STDERR
Перенаправление потоков: 
ps ax | grep p > /dev/null
ps ax	- вывести список всех процессов в текущ.сессии
preg p  - фильтрует по подстроке: всё, где есть "p"
  > 	- перенапр. в файл
  >>	- добавление к цели вывода
/dev/null	- файл для мусорных сообщений ("черная дыра")
/dev/zero	- источник нулей
/dev/random,  /dev/urandom	- источники сдучайных данных

0 - stdin
1 - stdout
2 - stderr

tee 	- дублирует данные, получен. через stdin в файл и в stdout
wich program	- показ. путь исполняемого файла program

---------- Многозадачность в пределах одной сессии
^Z (Ctrl+Z)	- увести текущ. прогу в фон
bg		- продолжить её выполн. в фоне
fg		- достать прогу из фона
jobs		- просмотр. список фоновых задач
fg N		- достать задачу номер N

------------------------- Найти файл
ls опции [каталог]
find [папка] [параметры] критерий шаблон [действие]
locate опции шаблон_для_поиска		- поиск по шаблону

find . -name "*.txt"	- ищет файл с .txt в текущем каталоге
	-name	- фильтр по имени/маске
	-type	- тип объект; d -дирек., f - файл
	-mtime	- фильтр по времени изменения: -2 - файлы моложе 2-х дней
	-ls	- вывод в стиле "ls -1"
	-exec command {} \; - для кажд.найден.ф.выполнить команду
locate -b zima		- выводит файл с именем по шаблону

------------------------- Посмотреть содержимое файла
cat	- покаж./запис. всё содерж. файла
less    - просмотр файла по странично (прокрутка по строчке)
more    - просмотр файла по странично (прокрутка по странично)
cat | less	- показ. весь файл постранично

------------------------- Редактировать файл
Vi - редактор, кот.есть в люб. поставке
Режимы: вставка и командный
i,a - режим вставки
<esc> - выйти из режима
^,$ - начало,конец строки
УДАЛИТЬ:
	dw - слово
	d6 - 6 символов
	d$ - все до конца строки
	dd - строку
yy - скопировать
p - вставить
x,wq - выйти с сохранением
q!

Sed - (Stream EDitor) редак. поток
 
------------------------- Создать файл, каталог
touch file  - созд. файл или измен. время модификации файла

cat > file - из консоли вводим текст и (^D) сохран. в целевой_файл

Наличие файла /etc/nologin запрещает всех логиниться, кроме суперп-ля

mkdir - создать каталог
  -v - подробный вывод
  -p - созд. все элементы пути 

------------------------- Копировать файл, каталог
cp
  -v - подробный вывод 
  -r - копировать каталоги рекурсивно
  -p - сохранять разрешения

------------------------- Навигация по каталогам
cd каталог
cd      - перейти в домашн. каталог
cd ~    - перейти в домашн. каталог
cd /    - перейти в корень
cd -    - меняет каталог на предыдущ.
cd ..   - на уровень выше
cd ../..   - на  2 уровня выше
cd .    - текущий каталог

pushd   - сменить дир. (предыдущ. сохр. в стек)
popd    - откатываться назад на одну по стеку
dirs    - показ. стек директорий

------------------------- Полезные хитрости
echo *    - аналог ls
echo .*   - показать скрытые файлы
{1..10}   - генерировать последовательность из цифр
alias     - назначить псевдоним для команды

Чтобы alias сохран., их нужно записыв. в .bash_profile



















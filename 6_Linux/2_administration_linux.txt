https://www.youtube.com/watch?v=cbo0HVW2ydw&list=RDCMUCmqEpAsQMcsYaeef4qgECvQ&index=3

Резервные копии надо регулярно проверять.

По умолч. для суперпол-ля резервир-ся место 10% (на случай, если место закончится, 
что бы суперпол. мог что-нибудь сделать).
В случае необходимости у него можно отобрать часть этого места.

inode - индексный дексриптор. Спец. сущность, в которой хранятся мета-инф. о файле:
• права
• ссылки на области данных
• размер
• владелец
• даты модификации:
  C_time  - изменения мета-инф-ии
  M_time  - изменения содержимого файла
  A_time  - доступа
• и др.

ls -i <файл>    - смотр. номер inode
stat <файл>     - инф. о файле: inode и др.
df -id          - инф. о всех inode

------------------------- Ссылки в Linux

Ссылки бывают:
1. Символические - имя файла ссылается на другое имя файла (похожи на обычные ярлыки).
Фактически является небольшим файлом, содержащим путь до целевого файла.
  • Могут ссылаться на файлы, каталоги, диски;
  • После удаления, перемещения или переименования файла становятся недействительными;
  • Права доступа и номер inode
    отличаются от исходного файла;
  • При изменении прав доступа для исходного файла, права на ссылку останутся неизменными;
2. Жёсткими - еще одно имя файла, кот. ссыл-ся на тот же inode.
Дополнительный указатель на существующий файл, но не копия файла.
  • Работают только в пределах одной файловой системы;
  • Нельзя ссылаться на каталоги;
  • Имеют тот же inode и набор разрешений что и у исходного файла;
  • Разрешения на ссылку изменяться при изменении разрешений файла;
  • Можно перемещать и переименовывать и даже удалять файл без вреда ссылке.

Создать сим. ссылку:
  ln -s <целевой_файл> <имя_ссылки>
  ln -s /home/pingvinus/myfile.txt mylink
  ls -li    - проверить создание (стрелка и разные inode)

Создать жёстк. ссылку:
  ln <целевой_файл> <имя_ссылки>
  ln /home/pingvinus/myfile.txt mylink
  ls -li    - проверить создание (одинаковый inode)

------------------------- AAA

AAA - Authentication, Authorization, Accounting

• Authentication (аутентификация) — проверка подлиности. Сопоставление пары "логин:пароль".
• Authorization (авторизация)     — предоставление прав доступа.
• Accounting (учёт)               — сохранение информации о действиях пользователя.

------------------------- SSH 

SSH (Secure Shell) — сетевой протокол прикладного уровня, 
  позволяющий производить удалённое управление операционной системой и туннелирование TCP-соединений. 
  Шифрует весь трафик, включая и передаваемые пароли.
  Позволяет безопасно передавать в незащищённой среде практически любой другой сетевой протокол.
  Может использовать сжатие передаваемых данных.
  Обычно прослушивает соединения на TCP-порту 22.
  Аутентификация по ip-адресу небезопасна. Можно использ. аутентификац. по паролю или по ключевой паре
  При каждом подключении подобно https вырабатывается общий секретный ключ для шифрования трафика.

PuTTY - клиент SSH под Windows
------------------------- ВХОД В СИСТЕМУ (удаленно)

1. Осмотреться:
  • кто я: id польз-ля, членство в группах, ...

whoami    - показ. моё имя
groups    - перечисли группы
id        - вывод информации об учетной записи пользователя

  • где я: имя системы, раб.каталог, список файлов в кат.

hostname    - имя текущ. сервера
pwd         - показ. текщу. дир.
ls -la      - список всех файлов в текущ. дир.

  • что вокруг: версия ядра, свободное место на дисках, инф. о памяти, кто в системе, ...

uname -a    - (Unix name) показ. инф. о ОС, процессорах, hostname (-a - всю инф.)
df -h       - (disk free) инф. об использ. смонтир. файлов. систем (-h - читабельн. вид)
free        - подробн. инф. об использовании памяти и swap
w           - кто в системе, и что делает
who         - кто вошёл в систему

------------------------- ФАЙЛОВАЯ СИСТЕМА LINUX

/etc            - локальные настройки
/home           - каталоги
/bin (*/bin)    - базовые утилиты (для поднятия/загрузки системы)
/sbin (*/sbin)  - сервисные утилиты (ипольз-ся системой или суперпользователем)
/user           - общая часть программы
/var            - изменяемые файлы (логи, очереди, базы, кеши)

------------------------- ПРАВА ДОСТУПА 

UGO права:
Смотрим ls -l:
-rw-rw-r-- 1 mdv ...

<-/d/s><Права польз-ля><Права группы><Права остальных>

В начале:
-: файл
d: директория
s: сокет

rwx (Read/Write/eXecute)

------------------------- 


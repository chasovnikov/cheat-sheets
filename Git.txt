
cd ~                   - перейти в домашний каталог
mkdir repos            - создать каталог для размещения репо
cd ~/repos             - перейти в новый каталог
git clone https://...  - клонировать репо из инета в текущий каталог
git clone https://... mylibgit  - клонир. в каталог mylibgit
ls                     - вывести содержимого список каталога

git init - создаёт в текущем каталоге новый подкаталог с именем .git, содержащий все необходимые файлы репозитория — структуру Git репозитория

clone                  - создает связанную с целевым репозиторием копию
fork     (вилка)       - создает независимую копию
branch   (ветка)       - параллельная версия репозитория
commit   (фиксировать) - фиксация изменений
pull     (вытащить)    - получение последних изменений из репозитория
pull request           - запрос на слияние форка с основным репозиторием
push     (выдвинуть)   - отправка коммитов в репозиторий
merge    (слить)       -  слияние веток
upstream (вверх по течению) - 


Файл .gitignore    - игнорирование файлов и каталогов по шаблонам:

#            - эта строка игнорируется
*.a          - не обрабатывать файлы, имя которых заканчивается на .a
!lib.a       - но отслеживать файл lib.a
/TODO        - игнорировать только файл TODO
build/       - игнорировать все файлы в каталоге build/
doc/*.txt    - игнорировать doc/notes.txt, но не doc/server/arch.txt
doc/**/*.txt - игнорировать все .txt файлы в каталоге doc/
             - Можно использовать стандартные glob шаблоны

git update-index --assume-unchanged <file>    
                            - временно игнорировать файл <file>
git update-index --no-assume-unchanged <file> 
                            - отключить игнорирование файла <file>

git config --global core.excludesfile ~/.gitexcludes    - исключение для компьютера


git diff              - смотреть непроиндексированные изменения
git diff --staged     - что проиндексировали и что войдёт в следующий коммит
git diff --cached     -  --staged и --cached синонимы
git status            - определение состояния файлов
git status -s         - Сокращенный вывод статуса
git status --short -  - то же самое

git add   - добавить в отслеживание новый файл,
            индексация изменений,
            указание файлов с исправленным конфликтом слияния.

git commit -v     - перед коммитом выводит в консоль подробное напоминание об изменениях
git commit                      - зафиксировать изменения.
git commit -m "comment here"    - набрать свой комментарий к коммиту
git commit -a                   - add + commit.

git rm               - удалить файл из индекса и каталога.
git rm --cached      - удалить файл из индекса, но не в каталоге.
git rm -f            - принудительное удаление.
git rm log/\*.log    - В команду git rm можно передавать файлы, каталоги или шаблоны.
git rm \*~           - удалить все файлы, имена которых заканчиваются на ~.

git mv README.md README    - переименовать файл из README.md в README.
    ТОЖЕ САМОЕ: (
mv README.md README
git rm README.md
git add README  )

git pull --all           - извлечь все изменения из удаленного репо
git branch new_branch    - создает новую ветку, но не переключает на неё
git checkout new_branch  - переключение на ветку new_branch
git merge new_branch     - смерджить ветку new_branch с текущей
git branch -d new_branch - удлать ветку new_branch
git push origin main     - запушить изменения на удален. репо

git fetch

git log                     - перечисляет коммиты
git log -p -2               - разницу, внесенную в каждый коммит (2 записи)
git log --stat              - сокращенная статистика
git log --pretty=oneline    - формат вывода:
    oneline                 - каждый коммит в одну строку
    short, full и fuller    - делают вывод приблизительно в том же формате
    format:"%h - %an, %ar : %s"
        %h  - Сокращенный хеш коммита
        %an - Имя автора
        %ar - Относительная дата автора
        %s  - Содержание
            - и др.        
    и др.
git log --pretty=oneline --graph    - добавится небольшой граф в формате ASCII
git log --since=2.weeks             - за последние две недели
        --author                    - фильтровать по автору коммита
        --grep                      - искать по ключевым словам
git log -S function_name            - те коммиты, в которых добавляется или удаляется эта строка
git log -- path/to/file             - те коммиты, в которых были изменения этих файлов
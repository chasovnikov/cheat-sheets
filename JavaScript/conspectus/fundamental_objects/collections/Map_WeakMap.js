
/**
 *  Map - коллекция значений с КЛЮЧАМИ ЛЮБОГО ТИПА
 *     (у обычного объекта ключи - строки и символы)
 *  В ключах Мар 
 *      NaN === NaN (обычно NaN != NaN)
 *  Перебор в том же порядке, в каком и добавление
 *  Для перебора можно использовать for..of и forEach(fn)
 *  Отличия от обычного объекта Object:
       Что угодно может быть ключом, в том числе и объекты.
       Есть дополнительные методы, свойство size.
 */

let map = new Map([
    ['1', 'str1'],
    [NaN, 'num2'],
]); 

// добавить элементы и вернуть объект Map
map.set(true, 'bool1')
   .set(2, false);

// Spread syntax
console.log( [...map] );

// вернуть значение по ключу
alert( map.get(NaN) );

// удалить элемент по ключу
map.delete(NaN);

// проверка наличия элемента по ключу
alert( map.has(NaN) );

// очистить всю коллекцию
map.clear();         

// показать кол-во элементов
alert( map.size );



/**
 * Три метода для перебора:
 * map.keys() – перебор по ключам,
 * map.values() – перебор по значениям,
 * map.entries() – перебор по парам вида [ключ, значение], 
       этот вариант используется по умолчанию в for..of.
 */
// перебор по ключам
for (let key of map.keys()) {
       alert(key);
}
     
// перебор по значениям
for (let value of map.values()) {
       alert(value);
}

// перебор по элементам в формате [ключ, значение]
for (let entry of map) { // то же самое, что и map.entries()
       alert(entry);
}

// выполняем функцию для каждой пары (ключ, значение)
map.forEach( (value, key, map) => {
       alert(`${key}: ${value}`);
     } );



/**
 * Создать Мар из обычного объекта
 */
let map1 = new Map( Object.entries( {name: 'alex'} ) );


/**
 * Создать обычный объект из Мар
 */
let map2 = Object.fromEntries( map1.entries() );



/**=================================
 *            WeakMap
 *  – это Map-подобная коллекция
 * Ключи должны быть объектами
 * При сборке мусора ключи удаляются
 * В основном используется в качестве дополнительного хранилища данных
 * Не поддерживает методы и свойства, работающие со всем содержимым сразу или возвращающие информацию о размере коллекции
 * Возможны только операции на отдельном элементе коллекции.
 */

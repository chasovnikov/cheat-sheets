

---------------------------------------------------------------------------------
fs.writeFile(file, data[, options], callback)

below       далее, ниже
affects     влияет
newly       вновь

When file is a filename, asynchronously writes data to the file, replacing the file if it already exists. data can be a string or a buffer.
When file is a file descriptor, the behavior is similar to calling fs.write() directly (which is recommended). See the notes below on using a file descriptor.
The encoding option is ignored if data is a buffer.
The mode option only affects the newly created file. See fs.open() for more details.
If data is a plain object, it must have an own (not inherited) toString function property.

Когда файл является именем файла, асинхронно записывает данные в файл, заменяя файл, если он уже существует. данные могут быть строкой или буфером.
Когда файл является дескриптором файла, поведение аналогично прямому вызову fs.write () (что рекомендуется). См. Примечания ниже по использованию дескриптора файла.
Параметр кодирования игнорируется, если данные являются буфером.
Параметр режима влияет только на вновь созданный файл. Подробнее см. Fs.open ().
Если данные представляют собой простой объект, они должны иметь собственное (не унаследованное) свойство функции toString.
---------------------------------------------------------------------------------
---------------------------------------------------------------------------------
---------------------------------------------------------------------------------
---------------------------------------------------------------------------------
---------------------------------------------------------------------------------
---------------------------------------------------------------------------------
---------------------------------------------------------------------------------
---------------------------------------------------------------------------------
---------------------------------------------------------------------------------
---------------------------------------------------------------------------------
---------------------------------------------------------------------------------
---------------------------------------------------------------------------------
---------------------------------------------------------------------------------
